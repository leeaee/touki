<project name="touki" default="develop" basedir=".">

	<condition property="project.home" value="${project.home}" else=".">
		<isset property="project.home" />
	</condition>
	
	<!-- property file -->
	<property file="${project.home}/dist/build.properties"/>
	<property file="${project.home}/dist/env/${build.for}.properties"/>
	
	<property name="dist.dir" value="${project.home}/dist"/>
	<property name="webapp.dir" value="${project.home}/webapps/csadmin"/>
	<property name="src.dir" value="${project.home}/src"/>
	<property name="res.dir" value="${project.home}/res"/>
	<property name="tem.dir" value="${project.home}/tem"/>
	<property name="compile.dir" value="${project.home}/webapps/csadmin/WEB-INF/classes"/>	
	
	<property name="dist.filename" value="ultralisk"/>
	<property name="dist" location="dist.dir" />
	
	<path id="classpath">
		<fileset dir="${project.home}/webapps/csadmin/WEB-INF/lib">
			<include name="**/*.jar"/>
		</fileset>
		<fileset dir="${project.home}/lib">
			<include name="**/*.jar"/>
		</fileset>		
	</path>
	
	<!-- Build for project -->
	<target name="clean" description="Delete the class files and any generated setting files.">
		<delete file="${dist.dir}/${dist.filename}.war" />
		<delete dir="${tem.dir}" />
		<delete dir="${compile.dir}" />
	</target>
	
	<target name="init">
		<fail unless="build.for" message="You must specify the build target in the properties file as 'build.for'."/>
		<fail unless="build.tag" message="You must specify the tag for this build in the properties file as 'build.tag'."/>
		<echo>
			Build for: ${build.for}
			Build tag: ${build.tag}
		</echo>
	</target>

	<target name="copy" depends="init">	
		<mkdir dir="${tem.dir}"/>
		<copy todir="${tem.dir}">
	    	<fileset dir="${webapp.dir}">
	    		<exclude name=".svn/*" />
	    	</fileset>
	    </copy>
		<delete dir="${tem.dir}/WEB-INF/classes" />	
		
		<copy todir="${tem.dir}/WEB-INF/classes" filtering="true" overwrite="true">
			<filterset>
				<filter token="build.for" value="${build.for}"/>
				<filtersfile file="${dist.dir}/env/${build.for}.properties" />				
			</filterset>			
	    	<fileset dir="${res.dir}" includes="*.*"></fileset>
	    </copy>
		<copy todir="${tem.dir}/WEB-INF/classes/cn/touki/i18n/resource" overwrite="true">
	    	<fileset dir="${res.dir}/lang" includes="*.xml"></fileset>
	    </copy>
	</target>
	
	<!-- config for development -->
	<target name="config" depends="init">
		<mkdir dir="${compile.dir}"/>
		<copy todir="${compile.dir}" filtering="true" overwrite="true">
			<filterset>
				<filter token="build.for" value="${build.for}"/>
				<filtersfile file="${dist.dir}/env/${build.for}.properties" />				
			</filterset>			
	    	<fileset dir="${res.dir}" includes="*.*"></fileset>
	    </copy>
		<copy todir="${compile.dir}/cn/touki/i18n/resource" overwrite="true">
	    	<fileset dir="${res.dir}/lang" includes="*.xml"></fileset>
	    </copy>		
	</target>	
	
	<target name="compile" depends="copy" description="Compiles all the Java source to the build directory.">
		<javac source="1.6" target="1.6" destdir="${tem.dir}/WEB-INF/classes" debug="on" encoding="UTF-8">
			<classpath refid="classpath"/>
			<src path="${src.dir}"/>
		</javac>	
	</target>
	
	<target name="war" depends="compile" description="Builds the WAR file including compressing JavaScript and updating version information on the About page.">
		<property name="complete.war.path" value="${dist.dir}/${dist.filename}.war"/>
		<war destfile="${complete.war.path}" webxml="${tem.dir}/WEB-INF/web.xml">		
			<fileset dir="${tem.dir}"/>
		</war>
		<delete dir="${tem.dir}" />
	</target>	
	
	<target name="dist" depends="war"/>
	
	<!-- target for develop setup -->
	<target name="develop" depends="config"/>				

</project>
